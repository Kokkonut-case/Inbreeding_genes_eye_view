[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "When not to avoid inbreeding: a gene’s eye view perspective",
    "section": "",
    "text": "Code\nlibrary(tidyverse) # for tidy style coding and plotting\nlibrary(pander) # for tables\nlibrary(MetBrewer) # for colour palettes based upon artwork housed at the met"
  },
  {
    "objectID": "index.html#load-packages",
    "href": "index.html#load-packages",
    "title": "When not to avoid inbreeding: a gene’s eye view perspective",
    "section": "",
    "text": "Code\nlibrary(tidyverse) # for tidy style coding and plotting\nlibrary(pander) # for tables\nlibrary(MetBrewer) # for colour palettes based upon artwork housed at the met"
  },
  {
    "objectID": "index.html#kokko-and-ots-continuous-time-in-and-time-out-model",
    "href": "index.html#kokko-and-ots-continuous-time-in-and-time-out-model",
    "title": "When not to avoid inbreeding: a gene’s eye view perspective",
    "section": "Kokko and Ots’ continuous ‘time in’ and ‘time out’ model",
    "text": "Kokko and Ots’ continuous ‘time in’ and ‘time out’ model\n\nMessing around with the maths\nOur basic equation includes three parameters\n\n\\(n\\) the number of offspring produced directly\nThe loss in fitness (number of offspring) due to inbreeding: \\(-\\delta n\\)\nThe inclusive fitness gain (number of offspring) due to inbreeding: \\(rn\\), where \\(r\\) is the relatedness coefficient\n\nPut together the inclusive fitness from an inbred mating (assuming the female is carrying eggs fertilised by a single males sperm) is:\n\\[(1 + r)(1 - \\delta)n\\]\nwhile fitness from an outbred mating is simply\n\\[n\\]\nwhen \\((1 + r)(1 - \\delta)n \\gt n\\) selection should favour a preference for inbreeding\nI find the messy condition is:\n\\[\\delta \\lt -1(\\frac{1}{1 + r} - 1)\\]\nHanna simplifies the equation to\n\\[\\delta \\lt \\frac{r}{1 + r}\\] Plot the required level of inbreeding depression required to stop inbreeding from evolving.\n\n\nCode\ninbreeding_maximum_function &lt;- function(r){\n  r / (1 + r)}\n\n\nparameters &lt;- expand_grid(r = seq(from = 0, to = 1, by = 0.05),\n                          delta = seq(from = 0, to = 1, by = 0.05))\n\nr &lt;- parameters %&gt;% distinct(r)\n\ninbreeding_equilibria &lt;- \n  map_dfr(r, inbreeding_maximum_function) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(r)\n\ninbreeding_equilibria %&gt;% \n  ggplot(aes(x = r, y = inbreeding_depression)) +\n  geom_line(linewidth = 0.8) + \n  coord_cartesian(ylim = c(0, 1)) +\n  labs(y = \"Inbreeding depression (prop fitness lost)\\n that can be tolerated\", \n       x = \"r, the relatedness coefficient\") +\n  theme_bw() +\n  theme(text = element_text(size = 14))\n\n\n\n\n\nThe parameter space above the curve shows where inbreeding avoidance should evolve, while the parameter space below the curve shows where inbreeding preference should evolve.\n\n\nAdd an opportunity for kin selection variable\nAs stated above, the inclusive fitness where there is no inbreeding depression is:\n\\[(1 + r)n\\]\nwe can add our ‘opportunity for kin selection’ parameter \\(o_i\\)\n\\[(1 + ro_i)n\\]\nwhich moderates the indirect fitness benefit by the probability that an allele identical by descent is propagated (\\(r\\)) and further, by the probability for the chromosome upon which the locus in question is found to actually be transmitted by the second individual (\\(o_i\\)) (relative to autosomal conditions).\nFor example, an inbreeding preference allele present on a Y or W chromosome has no opportunity to propagate any alleles identical by descent through inbreeding. In this case \\(o_i = 0\\). Conversely, an autosomal inbreeding preference allele can potentially propagate two copies of identical by descent alleles (the maximum in diploid organisms). \\(o_i = 1\\) in this case. The results for the autosomal scenario are presented in Kokko and Ots (2006), and the Y chromosome case produces clear results, as when \\(x = 0\\) inbreeding preference alleles provide no indirect fitness benefits and inbreeding is rarely adaptive when there is inbreeding depression (with exceptions).\nThe X or W chromosomes present a more complex case. Using the X as an example, X-linked alleles present in a male always have the opportunity to propagate IBD alleles carried by females through inbreeding. This is because the female relative will pass an X on to 100% of her offspring. However, the situation is not the same in females. X linked-alleles in females do not have any opportunity to propagate alleles IBD when producing sons, as mating partners only transmit Y chromosomes. Thus, if the primary sex ratio is even, then 50% of offspring provide no opportunity for inclusive fitness effects through inbreeding.\n\n\nCode\nx &lt;- \n  c(1, # autosomes, X chromosome males or Z chromosome females, haplodiploid both sexes when producing females \n    0, # Y or W chromosome\n    0.5 # X chromosome females or Z chromosome males\n  )\n\ntibble(`Opportunity for kin selection through inbreeding` = c(1, 0.5, 0),\n       `Relevant cases` = c(\"Autosomes in either sex, X chromosomes in males, Z chromosomes in females, chromosomes in haplodiploids of either sex when producing females\",\n                            \"X chromosomes in females, Z chromosomes in males\",\n                            \"Y chromosomes in males, W chromosomes in females\")) %&gt;% \n  pander(split.cell = 20, split.table = Inf)\n\n\n\n\n\n\n\n\n\nOpportunity for kin selection through inbreeding\nRelevant cases\n\n\n\n\n1\nAutosomes in either sex, X chromosomes in males, Z chromosomes in females, chromosomes in haplodiploids of either sex when producing females\n\n\n0.5\nX chromosomes in females, Z chromosomes in males\n\n\n0\nY chromosomes in males, W chromosomes in females\n\n\n\n\n\nThe inclusive fitness from an inbreeding event becomes\n\\[(1 + ro_i)(1 - \\delta )n\\]\nOnce again we can find the condition where inbreeding preferences should be selected (or where breeding with a relative returns greater fitness than an inbreeding avoidance strategy), this time accounting for chromosomal location\n\\[\\delta \\lt 1 - \\frac{1}{1 + ro_i}\\]\nwhich can neatly be expressed as\n\\[\\delta \\lt \\frac{ro_i}{1 + ro_i}\\]\n\n\nCode\ninbreeding_maximum_function_2 &lt;- function(r, o){\n  (r*o / (r*o + 1))}\n\n\nparameters_2 &lt;- expand_grid(r = seq(from = 0, to = 1, by = 0.01),\n                          o = c(0, 0.5, 1))\n\ninbreeding_equilibria_2 &lt;- \n  map2_dfr(parameters_2 %&gt;% select(r), \n           parameters_2 %&gt;% select(o), \n           inbreeding_maximum_function_2) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(parameters_2)\n\ninbreeding_equilibria_2 %&gt;% \n  mutate(o = as.factor(o)) %&gt;% \n  ggplot(aes(x = r, y = inbreeding_depression, linetype = o)) +\n  geom_line(linewidth = 0.8) + \n # scale_colour_manual(values = c(\"0\" = met.brewer(\"Kandinsky\", 4)[1], \"0.5\" =  met.brewer(\"Kandinsky\", 4)[2], \"1\" = met.brewer(\"Kandinsky\", 4)[3])) +\n  coord_cartesian(ylim = c(0, 1)) +\n  labs(y = \"Inbreeding depression (prop of fitness lost)\\n that can be tolerated\", \n       x = \"r, the relatedness coefficient\",\n       linetype = \"Opportunity for\\n kin selection\") +\n  theme_bw() +\n  theme(text = element_text(size = 14),\n        legend.position = \"bottom\")\n\n\n\n\n\nThe equations producing the slopes shown above assume that inbreeding has the same effect on every individual in the population, except that there is a difference between mating types in the transmission of certain chromosomes.\n\\(~\\)\n\n\nModelling the lifecycle\n\\(~\\)\nThis is hard, but everything should be in the Kokko and Ots paper\nWe can now directly follow Kokko and Ots (2006), altering the equations where required to reflect the fitness consequences of inbreeding for different chromosomes.\n\n\n\n\n\n\nParameter definitions\n\n\n\n\\(\\delta\\): fraction of offspring lost due to inbreeding (inbreeding depression)\n\\(v_I\\): ‘time in’ reproductive value of individuals of the choosing sex\n\\(w_I\\): ‘time in’ reproductive value of individuals of the opposite sex\n\\(v_O\\): ‘time out’ reproductive value of individuals of the choosing sex\n\\(w_O\\): ‘time out’ reproductive value of individuals of the opposite sex\n\\(M\\): the unrelated mate encounter rate during time in (when sex ratio is unbiased)\n\\(m_v = M \\sqrt{\\beta}\\): the mating rate for the choosy sex\n\\(m_w = \\frac{M}{\\sqrt{\\beta}}\\): the mating rate for the opposite sex\n\\(\\beta\\): the operational sex ratio (males:females)\n\\(a\\): average number of offspring produced from a mating (I think - needs to be found numerically)\n\\(T_v\\): time out duration for choosing sex\n\\(T_w\\): time out duration for opposite sex\n\\(\\mu_{Iv}\\): ‘time in’ mortality risk of individuals of the choosing sex\n\\(\\mu_{Iw}\\): ‘time in’ mortality risk of individuals of the opposite sex\n\\(\\mu_{Ov}\\): ‘time out’ mortality risk of individuals of the choosing sex\n\\(\\mu_{Ow}\\): ‘time out’ mortality risk of individuals of the opposite sex\n\n\nAfter mating, offspring are produced, with a direct fitness benefit of \\[a(v_I + w_I)\\]\n\nSimultaneous mate choice\nThe choosing sex can either mate with an unrelated individual or an individual related by \\(r\\).\nMate with unrelated individual: \\(v_O + ro_iw_I + a(v_I + w_1)\\)\nMate with kin: \\(v_O + ro_iw_O + (1 + ro_i)(1 - \\delta)a(v_I + w_1)\\)\nWe continue to frame our study around the value of \\(\\delta\\) that can be tolerated, or put another way, to what extent can inbreeding reduce offspring viability and still be the selected strategy?\nWe therefore rearrange the equation to find the threshold value of \\(\\delta\\) where\n\\[v_O + ro_iw_O + (1 + ro_i)(1 - \\delta)a(v_I + w_1) \\gt v_O + ro_iw_I + a(v_I + w_1)\\]\nto\n\\[\\delta_{sim} = 1 - \\frac{a(v_I + w_I) + ro_i(w_I - w_O)}{a(1 + ro_i)(v_I + w_I)}\\] which can be more neatly expressed as\n\\[\\delta_{sim} = \\frac{a ro_i(v_I + w_I) - ro_i(w_I - w_O)}{a(1 + ro_i)(v_I + w_I)}\\]\n\n\nSequential choice\nIn this scenario, a choosy individual (note that our models are framed around the strategy adopted by the choosy individuals) encounters a single potential mate, related by \\(r\\). The choosing sex can either mate with this individual or elect not to mate and wait for a future opportunity.\nNot mating produces the inclusive fitness:\n\\[v_I + ro_iw_I\\] Now an inbreeding preference strategy is favoured where\n\\[v_O + ro_iw_O + (1 + ro_i)(1 - \\delta)a(v_I + w_1) \\gt v_I + ro_iw_I\\]\nThus, the threshold \\(\\delta\\) value below which inbreeding is adaptive is\n\\[\\delta_{seq} = 1 - \\frac{(v_I - v_O) + ro_i(w_I - w_O)}{a(1 + ro_i)(v_I + w_I)}\\] \\(~\\)\n\n\n\nCalculating reproductive value\n\\(~\\)\n$$\n\\[\\begin{bmatrix}dv_I/dt\\\\\ndv_O/dt\\\\\ndw_I/dt\\\\\ndw_O/dt\n\\end{bmatrix}\\]\n=\n\\[\\begin{bmatrix}-\\mu_{Iv} + m_v(a - 1)  & m_v & am_v &  0\\\\\n1/T_v & 1/T_v -\\mu_{Ov} & 0 & 0\\\\\nam_w & 0 & -\\mu_{Iw} + m_w(a - 1) & m_w\\\\\n0 & 0 & 1/Tw & 1/T_w -\\mu_{Ow}\n\\end{bmatrix}\\]\n\n\\[\\begin{bmatrix}v_I\\\\\nv_O\\\\\nw_I\\\\\nw_O\n\\end{bmatrix}\\]\n$$\n\n\n\nCode\nm1 &lt;- matrix(c(1:4), ncol = 1)\n\nm2 &lt;- matrix(c(1:16), nrow = 4, ncol = 4)\n\nm2 %*% m1\n\n\n     [,1]\n[1,]   90\n[2,]  100\n[3,]  110\n[4,]  120\n\n\nCreate a function to calculate reproductive value for each state\n\n\nCode\nchange_repro_values &lt;- \n  matrix(c(-1*death_rate_in_choosy_sex + mating_rate_choosy_sex *(a - 1),\n           mating_rate_choosy_sex,\n           a*mating_rate_choosy_sex,\n           0,\n           1/time_out_duration_choosy_sex,\n           -1/time_out_duration_choosy_sex - death_rate_out_choosy_sex,\n           0,\n           0,\n           a*mating_rate_opp_sex,\n           0,\n           -1*death_rate_in_opp_sex + mating_rate_opp_sex *(a - 1),\n           mating_rate_opp_sex,\n           0,\n           0,\n           1/time_out_duration_opp_sex,\n           -1/time_out_duration_opp_sex - death_rate_out_opp_sex),\n         nrow = 4, ncol = 4)\n\nstate_repro_values &lt;- c(vI, vO, wI, wO)\n\nparameters &lt;- \n  expand_grid(r = 0.5,\n              x = c(0, 0.5, 1),\n              death_rate_in_choosy_sex = 1,\n              mating_rate_choosy_sex = ,\n              time_out_duration_choosy_sex = c(0.1, 0.01),\n              death_rate_out_choosy_sex = 1,\n              mating_rate_opp_sex = ,\n              death_rate_in_opp_sex = 1,\n              time_out_duration_opp_sex = ,\n              death_rate_out_opp_sex = 1,\n              a = ((mating_rate_choosy_sex*(1/time_out_duration_choosy_sex + death_rate_in_choosy_sex)/\n                      (death_rate_out_choosy_sex/time_out_duration_choosy_sex + \n                         death_rate_in_choosy_sex*(mating_rate_choosy_sex + death_rate_out_choosy_sex)))^-1)/2\n  )"
  },
  {
    "objectID": "index.html#a-simpler-approach-adapted-from-parker-1979",
    "href": "index.html#a-simpler-approach-adapted-from-parker-1979",
    "title": "When not to avoid inbreeding: a gene’s eye view perspective",
    "section": "A simpler approach: adapted from Parker 1979",
    "text": "A simpler approach: adapted from Parker 1979\nParker’s original equations:\nIn his 1979 book chapter, Parker considered the inclusive fitness results of breeding with a full sibling, \\(r = 0.5\\).\nFor males he found that selection would favour inbreeding with a sister (full-sib) who could otherwise outcross when:\n\\[N(1 - D) + \\frac{1}{2}N(1-D) - cN \\gt \\frac{1}{2}N\\]\nthe first term is the direct number of offspring alleles propagated, the second term is the indirect number of alleles propagated (note that this is weighted by relatedness), the third term is the direct number of alleles that were not directly propagated by the male through outcrossing (an opportunity cost) and the final opposing term is the number of alleles that would’ve been transmitted had his sister outcrossed (and he not mated at all).\nNote that \\(D\\) represents inbreeding depression (the prop of progeny production lost), which is equivalent to \\(\\delta\\) used in more recent models.\n\\(c\\) is the cost of the present mating, relative to what is lost for a female. This can be considered a ratio of parental investment. When \\(c = 1\\) parental investment in the current bout of reproduction is even between the sexes. Alternatively, if males contribute only sperm to an incestuous mating, the cost of mating is likely very small relative to females i.e. \\(c = 0\\).\nIf we wish to find the conditions under which male inbreeding is favoured for all levels of relatedness, \\(r\\) can be substituted into the equation:\n\\[N(1 - D) + rN(1-D) - cN \\gt rN\\]\ninto which we can add the \\(o\\) variable and simplify to\n\\[(1-D) + ro_i(1-D) - c \\gt ro_i\\]\nParker then modelled the condition for females to prefer incestuous matings when also presented with an outcrossing opportunity.\n\\[N(1 - D) + rN(1-D) - crN \\gt N\\] which we can write as\n\\[(1-D) + ro_i(1-D) - ro_ic \\gt 1\\]\nAs we have above, lets find the inbreeding threshold above which incestuous mating is maladaptive.\nFirst for males\n\\[\\delta_{male} = \\frac{1 - c}{1 + ro_i}\\]\nand for females\n\\[\\delta_{female} = \\frac{ ro_i - ro_ic}{1 + ro_i}\\] Plot the relationship between \\(r\\) and \\(\\delta\\) for several values of \\(c\\)\n\n\nCode\n# note: map2 can only handle two arguments, so for now I set c = 0\n\ninbreeding_threshold_function_female &lt;- function(r, o){\n  (r*o - r*o*0) / (r*o + 1)}\n\n\nparameters_2 &lt;- expand_grid(r = seq(from = 0, to = 1, by = 0.01),\n                          o = c(0, 0.5, 1))\n\ninbreeding_threshold_female &lt;- \n  map2_dfr(parameters_2 %&gt;% select(r), \n           parameters_2 %&gt;% select(o), \n           inbreeding_threshold_function_female) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(parameters_2) %&gt;% \n  mutate(Sex = \"Female\")\n\n# now build a function for males\n\ninbreeding_threshold_function_male &lt;- function(r, o){\n  (1 - 0) / (r*o + 1)}\n\ninbreeding_threshold_male &lt;- \n  map2_dfr(parameters_2 %&gt;% select(r), \n           parameters_2 %&gt;% select(o), \n           inbreeding_threshold_function_male) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(parameters_2) %&gt;% \n  mutate(Sex = \"Male\")\n\nsex_specific_inbreeding_thresholds &lt;- \n  bind_rows(inbreeding_threshold_female, inbreeding_threshold_male)\n\n# plot style 1\n\np1 &lt;- \n  sex_specific_inbreeding_thresholds %&gt;% \n  mutate(o = as.factor(o)) %&gt;% \n  ggplot(aes(x = r, y = inbreeding_depression, linetype = o, colour = Sex)) +\n  geom_line(linewidth = 0.9) + \n  scale_colour_manual(values = c(\"Female\" = met.brewer(\"Java\", 5)[2], \"Male\" =  met.brewer(\"Java\", 5)[5])) +\n  coord_cartesian(ylim = c(0, 1)) +\n  labs(y = \"Inbreeding depression (prop of fitness lost)\\n that can be tolerated\", \n       x = \"r, the relatedness coefficient\",\n       linetype = \"Opportunity for\\n kin selection\",\n       subtitle = \"c = 0\") +\n  theme_bw() +\n  theme(text = element_text(size = 14),\n        legend.position = \"bottom\")\n\np1\n\n\n\n\n\nCode\n# plot style 2\n\np1b &lt;- \n  sex_specific_inbreeding_thresholds %&gt;% \n  mutate(o = as.factor(o)) %&gt;% \n  ggplot(aes(x = r, y = inbreeding_depression, linetype = Sex)) +\n  geom_line(linewidth = 0.8) + \n # scale_colour_manual(values = c(\"0\" = met.brewer(\"Kandinsky\", 4)[1], \"0.5\" =  met.brewer(\"Kandinsky\", 4)[2], \"1\" = met.brewer(\"Kandinsky\", 4)[3])) +\n  coord_cartesian(ylim = c(0, 1)) +\n  facet_wrap(~o) +\n  labs(y = \"Inbreeding depression (prop of fitness lost)\\n that can be tolerated\", \n       x = \"r, the relatedness coefficient\")+#,\n       #linetype = \"Opportunity for\\n kin selection\") +\n  theme_bw() +\n  theme(text = element_text(size = 14),\n        legend.position = \"bottom\")\n\n\n\n\nCode\n# note: map2 can only handle two arguments, so for now I set c = 0\n\ninbreeding_threshold_function_female_0.5 &lt;- function(r, o){\n  (r*o - r*o*0.5) / (r*o + 1)}\n\n\nparameters_2 &lt;- expand_grid(r = seq(from = 0, to = 1, by = 0.01),\n                          o = c(0, 0.5, 1))\n\ninbreeding_threshold_female_0.5 &lt;- \n  map2_dfr(parameters_2 %&gt;% select(r), \n           parameters_2 %&gt;% select(o), \n           inbreeding_threshold_function_female_0.5) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(parameters_2) %&gt;% \n  mutate(Sex = \"Female\")\n\n# now build a function for males\n\ninbreeding_threshold_function_male_0.5 &lt;- function(r, o){\n  (1 - 0.5) / (r*o + 1)}\n\ninbreeding_threshold_male_0.5 &lt;- \n  map2_dfr(parameters_2 %&gt;% select(r), \n           parameters_2 %&gt;% select(o), \n           inbreeding_threshold_function_male_0.5) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(parameters_2) %&gt;% \n  mutate(Sex = \"Male\")\n\nsex_specific_inbreeding_thresholds_0.5 &lt;- \n  bind_rows(inbreeding_threshold_female_0.5, inbreeding_threshold_male_0.5)\n\n# plot style 1\n\np2 &lt;- \n  sex_specific_inbreeding_thresholds_0.5 %&gt;% \n  mutate(o = as.factor(o)) %&gt;% \n  ggplot(aes(x = r, y = inbreeding_depression, linetype = o, colour = Sex)) +\n  geom_line(linewidth = 0.9) + \n  scale_colour_manual(values = c(\"Female\" = met.brewer(\"Java\", 5)[2], \"Male\" =  met.brewer(\"Java\", 5)[5])) +\n  coord_cartesian(ylim = c(0, 1)) +\n  labs(y = \"Inbreeding depression (prop of fitness lost)\\n that can be tolerated\", \n       x = \"r, the relatedness coefficient\",\n       linetype = \"Opportunity for\\n kin selection\",\n       subtitle = \"c = 0.5\") +\n  theme_bw() +\n  theme(text = element_text(size = 14),\n        legend.position = \"bottom\")\n\np2\n\n\n\n\n\n\n\nCode\n# note: map2 can only handle two arguments, so for now I set c = 0\n\ninbreeding_threshold_function_female_0.9 &lt;- function(r, o){\n  (r*o - r*o*0.9) / (r*o + 1)}\n\n\nparameters_2 &lt;- expand_grid(r = seq(from = 0, to = 1, by = 0.01),\n                          o = c(0, 0.5, 1))\n\ninbreeding_threshold_female_0.9 &lt;- \n  map2_dfr(parameters_2 %&gt;% select(r), \n           parameters_2 %&gt;% select(o), \n           inbreeding_threshold_function_female_0.9) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(parameters_2) %&gt;% \n  mutate(Sex = \"Female\")\n\n# now build a function for males\n\ninbreeding_threshold_function_male_0.9 &lt;- function(r, o){\n  (1 - 0.9) / (r*o + 1)}\n\ninbreeding_threshold_male_0.9 &lt;- \n  map2_dfr(parameters_2 %&gt;% select(r), \n           parameters_2 %&gt;% select(o), \n           inbreeding_threshold_function_male_0.9) %&gt;% \n  rename(inbreeding_depression = r) %&gt;% \n  bind_cols(parameters_2) %&gt;% \n  mutate(Sex = \"Male\")\n\nsex_specific_inbreeding_thresholds_0.9 &lt;- \n  bind_rows(inbreeding_threshold_female_0.9, inbreeding_threshold_male_0.9)\n\n# plot style 1\n\np3 &lt;- \n  sex_specific_inbreeding_thresholds_0.9 %&gt;% \n  mutate(o = as.factor(o)) %&gt;% \n  ggplot(aes(x = r, y = inbreeding_depression, linetype = o, colour = Sex)) +\n  geom_line(linewidth = 0.9) + \n  scale_colour_manual(values = c(\"Female\" = met.brewer(\"Java\", 5)[2], \"Male\" =  met.brewer(\"Java\", 5)[5])) +\n  coord_cartesian(ylim = c(0, 1)) +\n  labs(y = \"Inbreeding depression (prop of fitness lost)\\n that can be tolerated\", \n       x = \"r, the relatedness coefficient\",\n       linetype = \"Opportunity for\\n kin selection\",\n       subtitle = \"c = 0.9\") +\n  theme_bw() +\n  theme(text = element_text(size = 14),\n        legend.position = \"bottom\")\n\np3"
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Notes",
    "section": "",
    "text": "Premise outline\nThis project centres around the fate of alleles that encode inbreeding preference / avoidance depending on where they occur within the genome.\nBut the deeper idea is that inbreeding is a ‘selfish action’ where some alleles benefit from helping copies of themselves in other individuals, to the detriment of the broader organism. This detriment occurs because of inbreeding depression, which occurs because of homozygosity at other loci across the genome. Homozygosity causes the expression of recessive deleterious alleles which are otherwise rarely expressed, reducing the number of viable offspring produced by the organism.\nTo represent the broader genome, we can use alleles on hemizygous sex chromosomes, which have no opportunity to be homozygous and thus can gain no benefits of helping a relative gain a breeding opportunity. This broadly aligns with the ‘interests’ of the organism. For example, in an XY system alleles on the Y do not increase the propagation of alleles identical by descent through inbreeding, because females do not carry a Y. An autosomal allele, however, does have the potential to increase the proliferation of its copies by increasing the chance of breeding with a relative. This benefit is somewhat similar to that achieved by meiotic drive allele (clarify your thoughts here).\nA second potential angle is to explore the effect of the sex an allele encoding a preference for inbreeding is expressed in. This is important because the conditions often applicable to expression in a male present a greater parameter space for inbreeding preference (to put it too simply, because males invest less in each mating opportunity than females). Sex-specific effects also interact with hemizygous conditions, because in addition to XY systems, ZW systems exist and suddenly hemizygous chromosomes are present in females.\nSo in sum, there is a likely conflict between alleles on different chromosomes over the tendency to inbreed and there is a second non-mutually exclusive conflict between the sexes over inbreeding tendency. Wow, this is cool.\nThis idea might be deeper still. We point out that alleles on hemizygous sex chromosomes gain no indirect inclusive fitness benefits by mating with kin. The kicker is that inbreeding is just one example of this larger idea. There are no inclusive fitness benefits for alleles that encode any altruistic behaviour towards opposite sex individuals (where one sex possesses a hemizygous sex chromosome).\nSome specific notes from the meeting\n\nHanna’s 2006 paper shows when a preference for inbreeding should or should not be favoured for an autosomal allele, but does not consider other regions of the genome.\nStart with the Parker 1/3 thing, which Hanna and co re-derive. But they implicitly assume that the alleles in question here are on an autosome. We can make the change that they are on a sex chromosome, as stipulated above.\nThe X and Z can also be explored, because of their unusual inheritance dynamics. E.g. the X spends 2/3 of its time in females, but is always expressed in males and vice versa for the W.\nDoes it matter whether the loci that cause inbreeding depression are on the same/different chromosomes as those that encode inbreeding preferences…\nBirds versus mammals, flies versus butterflies etc - different hemizygous sex chromosomes\nUnity breaks down because of inheritance differences\nHamilton 1967 extraordinary sex chromosomes paper is a nice angle here\nHaplodiploidy - this is an extension opportunity.\nI will also try to simulate this question.\n\n\\(~\\)\n\n\n\n\nHanna suggests that the time in, time out continuous framework might not be the best option, as it is not the most intuitive for others.\nPerhaps keeping it simple may be the best way forward - females mate once, males mate multiple times. This produces differences in the opportunity cost of mating between the sexes.\nA discrete time model might work better\nScottish group models the inbreeding problem in helpful ways\nAnother way is to follow the Ekrem paper and simulate in an intelligent way (this method might be particularly fruitful)\nEssentially browse the different ways to approach the problem and follow one you like best.\nModels like our developing one do not consider purging dynamics that should occur if inbreeding becomes common."
  },
  {
    "objectID": "notes.html#project-background-notes",
    "href": "notes.html#project-background-notes",
    "title": "Notes",
    "section": "",
    "text": "Premise outline\nThis project centres around the fate of alleles that encode inbreeding preference / avoidance depending on where they occur within the genome.\nBut the deeper idea is that inbreeding is a ‘selfish action’ where some alleles benefit from helping copies of themselves in other individuals, to the detriment of the broader organism. This detriment occurs because of inbreeding depression, which occurs because of homozygosity at other loci across the genome. Homozygosity causes the expression of recessive deleterious alleles which are otherwise rarely expressed, reducing the number of viable offspring produced by the organism.\nTo represent the broader genome, we can use alleles on hemizygous sex chromosomes, which have no opportunity to be homozygous and thus can gain no benefits of helping a relative gain a breeding opportunity. This broadly aligns with the ‘interests’ of the organism. For example, in an XY system alleles on the Y do not increase the propagation of alleles identical by descent through inbreeding, because females do not carry a Y. An autosomal allele, however, does have the potential to increase the proliferation of its copies by increasing the chance of breeding with a relative. This benefit is somewhat similar to that achieved by meiotic drive allele (clarify your thoughts here).\nA second potential angle is to explore the effect of the sex an allele encoding a preference for inbreeding is expressed in. This is important because the conditions often applicable to expression in a male present a greater parameter space for inbreeding preference (to put it too simply, because males invest less in each mating opportunity than females). Sex-specific effects also interact with hemizygous conditions, because in addition to XY systems, ZW systems exist and suddenly hemizygous chromosomes are present in females.\nSo in sum, there is a likely conflict between alleles on different chromosomes over the tendency to inbreed and there is a second non-mutually exclusive conflict between the sexes over inbreeding tendency. Wow, this is cool.\nThis idea might be deeper still. We point out that alleles on hemizygous sex chromosomes gain no indirect inclusive fitness benefits by mating with kin. The kicker is that inbreeding is just one example of this larger idea. There are no inclusive fitness benefits for alleles that encode any altruistic behaviour towards opposite sex individuals (where one sex possesses a hemizygous sex chromosome).\nSome specific notes from the meeting\n\nHanna’s 2006 paper shows when a preference for inbreeding should or should not be favoured for an autosomal allele, but does not consider other regions of the genome.\nStart with the Parker 1/3 thing, which Hanna and co re-derive. But they implicitly assume that the alleles in question here are on an autosome. We can make the change that they are on a sex chromosome, as stipulated above.\nThe X and Z can also be explored, because of their unusual inheritance dynamics. E.g. the X spends 2/3 of its time in females, but is always expressed in males and vice versa for the W.\nDoes it matter whether the loci that cause inbreeding depression are on the same/different chromosomes as those that encode inbreeding preferences…\nBirds versus mammals, flies versus butterflies etc - different hemizygous sex chromosomes\nUnity breaks down because of inheritance differences\nHamilton 1967 extraordinary sex chromosomes paper is a nice angle here\nHaplodiploidy - this is an extension opportunity.\nI will also try to simulate this question.\n\n\\(~\\)\n\n\n\n\nHanna suggests that the time in, time out continuous framework might not be the best option, as it is not the most intuitive for others.\nPerhaps keeping it simple may be the best way forward - females mate once, males mate multiple times. This produces differences in the opportunity cost of mating between the sexes.\nA discrete time model might work better\nScottish group models the inbreeding problem in helpful ways\nAnother way is to follow the Ekrem paper and simulate in an intelligent way (this method might be particularly fruitful)\nEssentially browse the different ways to approach the problem and follow one you like best.\nModels like our developing one do not consider purging dynamics that should occur if inbreeding becomes common."
  },
  {
    "objectID": "Selfish_inbreeding.html",
    "href": "Selfish_inbreeding.html",
    "title": "Selfish_inbreeding",
    "section": "",
    "text": "I think we can answer our question using the Kokko and Ots framework, but is it the right choice? Given we take a gene’s eye view, is a population genetic model (or if too difficult, a simulation) required.\nKin selection pop-gen models are well developed, by the time in, time out investment into reproduction dynamics is going to require lots of thinking on my behalf.\nThis is my first goal…\n\n\n\nLet’s build a single autosomal locus, bi-allelic model, assuming Hardy-Weinberg equilibrium.\n\nThe \\(A\\) allele is the ‘non-donor’ allele (can be thought of as an allele encoding outbreeding preference). The frequency of this allele is \\(p\\).\nThe \\(a\\) allele is the donor allele (the altruistic allele, which may encode inbreeding preference). The frequency of this allele is \\(q = 1 - p\\).\n\\(1 - h^2\\) is the likelihood that the \\(Aa\\) genotype exhibits the altruistic behaviour. If \\(h^2 = 1\\) then the allele is completely recessive.\n\nThe next step is to find all possible mating types:\n\n\nCode\nmake_mating_table &lt;- function(){#k, normalP1, P1cost, P2cost){\n  \n  make_offspring &lt;- function(X, Y, type, zygote_freq){\n    tibble(mother = X,\n           father = Y,\n           type,\n           zygote_freq)\n  }\n\n  # Set up the 9 possible mating combinations\n  \n  mating_types &lt;- expand_grid(\n    mother = c(\"AA_female\",\n               \"Aa_female\",\n               \"aa_female\"),\n    father = c(\"AA_male\",\n                \"Aa_male\",\n                \"aa_male\"))\n\n\n # Specify the possible offspring genotypes for all the potential crosses; we use these for the type argument in the make_offspring function\n  \n  # AA x AA\n  \n  g0 &lt;- c(\"AA_female\", \"AA_male\")\n  \n  # Aa x AA & AA x Aa\n  \n  g1 &lt;- c(\"AA_female\", \"AA_male\", \"Aa_female\", \"Aa_male\")\n  \n  # aa x AA & AA x aa\n  \n  g2 &lt;- c(\"Aa_female\", \"Aa_male\")\n  \n  # Aa x Aa\n  \n  g3 &lt;- c(\"AA_female\", \"AA_male\", \"Aa_female\", \"Aa_male\", \"aa_female\", \"aa_male\")\n  \n  # Aa x aa & aa x Aa\n  \n  g4 &lt;- c(\"Aa_female\", \"Aa_male\", \"aa_female\", \"aa_male\")\n  \n  # aa x aa\n  \n  g5 &lt;- c(\"aa_female\", \"aa_male\")\n  \n  # Now calculate the zygote frequencies for each cross\n  \n  # even frequency of four offspring types\n  \n  rep25 &lt;- rep(0.25, 4)\n  \n  # even frequency between two offspring types\n  \n  rep5 &lt;- rep(0.5, 2)\n  \n  # Aa * Aa\n  \n  p1 &lt;- c(0.5*0.25,\n          0.5*0.25,\n          0.5*0.5,\n          0.5*0.5,\n          0.5*0.25,\n          0.5*0.25)\n  \n    bind_rows(\n    list(\n      make_offspring(\"AA\", \"AA\", g0, rep5),\n      make_offspring(\"AA\", \"Aa\", g1, rep25),\n      make_offspring(\"AA\", \"aa\", g2, rep5),\n      make_offspring(\"Aa\", \"AA\", g1, rep25),\n      make_offspring(\"Aa\", \"Aa\", g3, p1),\n      make_offspring(\"Aa\", \"aa\", g4, rep25),\n      make_offspring(\"aa\", \"AA\", g2, rep5),\n      make_offspring(\"aa\", \"Aa\", g4, rep25),\n      make_offspring(\"aa\", \"aa\", g5, rep5)\n    )) %&gt;% \n    arrange(mother, father)\n  \n}\n\nmake_mating_table() %&gt;% \n  rename(zygote_type = type) %&gt;% \n  kable() %&gt;% \n  kable_styling() %&gt;% \n  scroll_box(height = \"500px\")\n\n\nThe frequency of each mating type can be generated using the terms of the classic equation:\n\\[(p^2 + 2pq + q^2)^2\\] Note the final square generates the mating combination.\nThe frequencies of each genotype are\n\n\nCode\n(Mating_type_freqs &lt;-\n  tibble(mother = c(\"AA\",\"AA\",\"AA\",\"Aa\",\"Aa\",\"Aa\",\"aa\",\"aa\",\"aa\"),\n         father = c(\"AA\",\"Aa\",\"aa\",\"AA\",\"Aa\",\"aa\",\"AA\",\"Aa\",\"aa\"),\n         frequency = c(\"(p^4)/2\", \"(4p^3*q)/2\", \"(2p^2*2q^2)/2\", \"(4p^3*q)/2\",\n                       \"(4p^2*q^2)/2\", \"(4p*q^3)/2\", \"(2p^2*2q^2)/2\", \"(4p*q^3)/2\",\n                       \"(q^4)/2\"\n                       )) %&gt;% \n  kable() %&gt;% \n    kable_styling())\n\n\n\n\n\n\nThis is a two-step process. First we determine the frequencies of each genotype in the mating population (this could be, for example, after we’ve accounted for inbreeding costs), then we calculate the frequencies of each potential mating combination between these genotypes.\nStep 1 - finding the genotype frequencies in the mating population\nHere we can model an inbreeding depression effect, by changing the viability of different genotypes. I make this a constant for now, to aid my initial understanding, but later this will be one of the key parameters to vary.\nI have also allowed the dominance of \\(a\\) to vary. While inbreeding depression is the result of the increased expression of recessive alleles through homozygosity, partially recessive alleles are likely to be common. When \\(h = 1\\), the \\(a\\) allele is completely recessive.\n\n\nCode\negg_adult_viability_Aa_finder &lt;- function(h){1 - 0.33*(1 - h)}\n\n\n# viability of each genotype \n\negg_adult_viability_AA_female &lt;- 1\n\negg_adult_viability_Aa_female &lt;- egg_adult_viability_Aa_finder(h = 1)\n\negg_adult_viability_aa_female &lt;- 0.67\n\negg_adult_viability_AA_male &lt;- 1\n\negg_adult_viability_Aa_male &lt;- egg_adult_viability_Aa_finder(h = 1)\n\negg_adult_viability_aa_male &lt;- 0.67\n\n\nUsing these parameters, we implement selection, so that each genotype is represented in the mating combinations according to the product of its frequency and its viability, which is determined by inbreeding depression. I assume that mating success is constant across genotypes (this may not be possible if one allele approaches extinction).\nStep 2 - finding the frequency of all potential mating combinations in the mating population\nNext, we model the effect of inbreeding preference on inclusive fitness (direct + indirect fitness). I first assume that individuals are faced with a simultaneous choice situation - between mating with a relative or mating with an unrelated individual.\nFor simplicity at the outset, I assume that inbreeding preference is only expressed in females. To simulate inbreeding preference, females carrying the \\(a\\) allele mate with siblings (those individuals produced by the same parental genotype combination). However, dominance also plays a role here. A proportion \\(1 - h\\) of \\(Aa\\) females express inbreeding preference, whereas a proportion \\(h\\) do not.\nWith the above in mind, I calculate the expected frequencies of each possible ‘mating combination’ (i.e. the combination of the maternal and paternal genotypes) across the population. For singly-mated females with genotype \\(AA\\), the frequency of each mating type is simply given by \\(F_iM_j\\), where \\(F_i\\) and \\(M_j\\) are the female and male parental genotype frequencies, that is they choose mates at random. For females with genotype \\(Aa\\) a proportion \\(1 - h\\) express a preference for inbreeding. For these females, the expected frequencies for each mating type are determined by the parental mating type combination they were produced by. These females randomly choose a mate from a subset of possible genotypes produced by the parental combination e.g. an \\(AA\\) x \\(aa\\) mating will produce a female that will choose to mate with a \\(Aa\\) male (the only possible genotype of her brothers). The proportion \\(h\\) of \\(Aa\\) females not expressing the \\(a\\) allele choose mates at random. Finally, All \\(aa\\) females choose to mate with individuals sired by the same parental genotypes.\n\n\nCode\nfind_mating_type_frequencies &lt;- function(pop, prob_remating_SD, prob_remating_W){\n  \n  # Step 1\n  \n  pop$prop &lt;- pop$prop * pop$egg_adult_viability # here's the selection step \n  pop$prop &lt;- pop$prop / sum(pop$prop) # now restandardise so that the props sum to 1\n  \n  # Step 2\n  \n  # Calculate the frequency of each single-mating combination\n  \n  first_mating_types &lt;- \n    expand_grid(mother = pop$type[str_detect(pop$type, \"female\")], # find all possible mother genotypes\n                father = pop$type[!str_detect(pop$type, \"female\")]) %&gt;% # find all possible father1 genotypes\n    mutate(prop_matings = 0, remating_probability = 0) # make placeholder columns we will fill in below\n  \n  # find genotype frequencies calculated for each sex (mate choice means these will not necessarily be 50:50)\n  \n  female_frequencies &lt;- pop %&gt;% filter(str_detect(type, \"female\")) %&gt;% mutate(prop = prop / sum(prop))\n  male_frequencies &lt;- pop %&gt;% filter(!str_detect(type, \"female\")) %&gt;% mutate(prop = prop / sum(prop))\n  \n  # This next step multiplies the proportion[i] of females with genotype[i] with the proportion[i] of males with genotype[i] \n  \n  for(i in 1:nrow(first_mating_types)){\n    first_mating_types$prop_matings[i] &lt;- female_frequencies$prop[female_frequencies$type == first_mating_types$mother[i]] * \n      male_frequencies$prop[male_frequencies$type == first_mating_types$father1[i]]\n  }\n  \n  # Now we incorporate female remating probabilities (SDSD males assumed to have same effect on females as WW males)\n  \n  first_mating_types$remating_probability &lt;- ifelse(str_detect(first_mating_types$father1, \"WSD\"), prob_remating_SD, prob_remating_W)\n  \n  # Now lets calculate the frequency of each double-mating combination, with the end product being the mating_type_frequency of each mating possibility\n  \n  second_mating_types &lt;- expand_grid(first_mating_types, father2 = c(\"none\", unique(first_mating_types$father1))) %&gt;%\n    mutate(mating_type_freq = 0)\n  \n  # scale the proportion of matings calculated above by the likelihood that these females will mate once\n  \n  for(i in 1:nrow(second_mating_types)){\n    if(second_mating_types$father2[i] == \"none\"){\n      second_mating_types$mating_type_freq[i] &lt;- \n        second_mating_types$prop_matings[i] * # Frequency of females with this value of father1\n        (1 - second_mating_types$remating_probability[i])\n    }\n    \n    # now calculate the frequency of mating tryads for the females that mate twice\n    \n    if(second_mating_types$father2[i] != \"none\"){\n      second_mating_types$mating_type_freq[i] &lt;- \n        second_mating_types$prop_matings[i] * # Frequency of females with this value of father1\n        second_mating_types$remating_probability[i] *\n        male_frequencies$prop[male_frequencies$type == second_mating_types$father2[i]] # pop. freq of the 2nd male type\n    }\n  }\n  \n  second_mating_types %&gt;% # output\n    select(mother, father1, father2, mating_type_freq) %&gt;%\n    # clean up the output by remving redundant info (makes it easier later)\n    mutate(mother = str_remove_all(mother, \"_female\"),\n           father1 = str_remove_all(father1, \"_male\"),\n           father2 = str_remove_all(father2, \"_male\"))\n}"
  },
  {
    "objectID": "Selfish_inbreeding.html#changing-the-focus-from-chromosomes-to-alleles",
    "href": "Selfish_inbreeding.html#changing-the-focus-from-chromosomes-to-alleles",
    "title": "Selfish_inbreeding",
    "section": "",
    "text": "I think we can answer our question using the Kokko and Ots framework, but is it the right choice? Given we take a gene’s eye view, is a population genetic model (or if too difficult, a simulation) required.\nKin selection pop-gen models are well developed, by the time in, time out investment into reproduction dynamics is going to require lots of thinking on my behalf.\nThis is my first goal…\n\n\n\nLet’s build a single autosomal locus, bi-allelic model, assuming Hardy-Weinberg equilibrium.\n\nThe \\(A\\) allele is the ‘non-donor’ allele (can be thought of as an allele encoding outbreeding preference). The frequency of this allele is \\(p\\).\nThe \\(a\\) allele is the donor allele (the altruistic allele, which may encode inbreeding preference). The frequency of this allele is \\(q = 1 - p\\).\n\\(1 - h^2\\) is the likelihood that the \\(Aa\\) genotype exhibits the altruistic behaviour. If \\(h^2 = 1\\) then the allele is completely recessive.\n\nThe next step is to find all possible mating types:\n\n\nCode\nmake_mating_table &lt;- function(){#k, normalP1, P1cost, P2cost){\n  \n  make_offspring &lt;- function(X, Y, type, zygote_freq){\n    tibble(mother = X,\n           father = Y,\n           type,\n           zygote_freq)\n  }\n\n  # Set up the 9 possible mating combinations\n  \n  mating_types &lt;- expand_grid(\n    mother = c(\"AA_female\",\n               \"Aa_female\",\n               \"aa_female\"),\n    father = c(\"AA_male\",\n                \"Aa_male\",\n                \"aa_male\"))\n\n\n # Specify the possible offspring genotypes for all the potential crosses; we use these for the type argument in the make_offspring function\n  \n  # AA x AA\n  \n  g0 &lt;- c(\"AA_female\", \"AA_male\")\n  \n  # Aa x AA & AA x Aa\n  \n  g1 &lt;- c(\"AA_female\", \"AA_male\", \"Aa_female\", \"Aa_male\")\n  \n  # aa x AA & AA x aa\n  \n  g2 &lt;- c(\"Aa_female\", \"Aa_male\")\n  \n  # Aa x Aa\n  \n  g3 &lt;- c(\"AA_female\", \"AA_male\", \"Aa_female\", \"Aa_male\", \"aa_female\", \"aa_male\")\n  \n  # Aa x aa & aa x Aa\n  \n  g4 &lt;- c(\"Aa_female\", \"Aa_male\", \"aa_female\", \"aa_male\")\n  \n  # aa x aa\n  \n  g5 &lt;- c(\"aa_female\", \"aa_male\")\n  \n  # Now calculate the zygote frequencies for each cross\n  \n  # even frequency of four offspring types\n  \n  rep25 &lt;- rep(0.25, 4)\n  \n  # even frequency between two offspring types\n  \n  rep5 &lt;- rep(0.5, 2)\n  \n  # Aa * Aa\n  \n  p1 &lt;- c(0.5*0.25,\n          0.5*0.25,\n          0.5*0.5,\n          0.5*0.5,\n          0.5*0.25,\n          0.5*0.25)\n  \n    bind_rows(\n    list(\n      make_offspring(\"AA\", \"AA\", g0, rep5),\n      make_offspring(\"AA\", \"Aa\", g1, rep25),\n      make_offspring(\"AA\", \"aa\", g2, rep5),\n      make_offspring(\"Aa\", \"AA\", g1, rep25),\n      make_offspring(\"Aa\", \"Aa\", g3, p1),\n      make_offspring(\"Aa\", \"aa\", g4, rep25),\n      make_offspring(\"aa\", \"AA\", g2, rep5),\n      make_offspring(\"aa\", \"Aa\", g4, rep25),\n      make_offspring(\"aa\", \"aa\", g5, rep5)\n    )) %&gt;% \n    arrange(mother, father)\n  \n}\n\nmake_mating_table() %&gt;% \n  rename(zygote_type = type) %&gt;% \n  kable() %&gt;% \n  kable_styling() %&gt;% \n  scroll_box(height = \"500px\")\n\n\nThe frequency of each mating type can be generated using the terms of the classic equation:\n\\[(p^2 + 2pq + q^2)^2\\] Note the final square generates the mating combination.\nThe frequencies of each genotype are\n\n\nCode\n(Mating_type_freqs &lt;-\n  tibble(mother = c(\"AA\",\"AA\",\"AA\",\"Aa\",\"Aa\",\"Aa\",\"aa\",\"aa\",\"aa\"),\n         father = c(\"AA\",\"Aa\",\"aa\",\"AA\",\"Aa\",\"aa\",\"AA\",\"Aa\",\"aa\"),\n         frequency = c(\"(p^4)/2\", \"(4p^3*q)/2\", \"(2p^2*2q^2)/2\", \"(4p^3*q)/2\",\n                       \"(4p^2*q^2)/2\", \"(4p*q^3)/2\", \"(2p^2*2q^2)/2\", \"(4p*q^3)/2\",\n                       \"(q^4)/2\"\n                       )) %&gt;% \n  kable() %&gt;% \n    kable_styling())"
  },
  {
    "objectID": "Selfish_inbreeding.html#function-to-determine-the-mating-type-frequencies-of-the-population",
    "href": "Selfish_inbreeding.html#function-to-determine-the-mating-type-frequencies-of-the-population",
    "title": "Selfish_inbreeding",
    "section": "",
    "text": "This is a two-step process. First we determine the frequencies of each genotype in the mating population (this could be, for example, after we’ve accounted for inbreeding costs), then we calculate the frequencies of each potential mating combination between these genotypes.\nStep 1 - finding the genotype frequencies in the mating population\nHere we can model an inbreeding depression effect, by changing the viability of different genotypes. I make this a constant for now, to aid my initial understanding, but later this will be one of the key parameters to vary.\nI have also allowed the dominance of \\(a\\) to vary. While inbreeding depression is the result of the increased expression of recessive alleles through homozygosity, partially recessive alleles are likely to be common. When \\(h = 1\\), the \\(a\\) allele is completely recessive.\n\n\nCode\negg_adult_viability_Aa_finder &lt;- function(h){1 - 0.33*(1 - h)}\n\n\n# viability of each genotype \n\negg_adult_viability_AA_female &lt;- 1\n\negg_adult_viability_Aa_female &lt;- egg_adult_viability_Aa_finder(h = 1)\n\negg_adult_viability_aa_female &lt;- 0.67\n\negg_adult_viability_AA_male &lt;- 1\n\negg_adult_viability_Aa_male &lt;- egg_adult_viability_Aa_finder(h = 1)\n\negg_adult_viability_aa_male &lt;- 0.67\n\n\nUsing these parameters, we implement selection, so that each genotype is represented in the mating combinations according to the product of its frequency and its viability, which is determined by inbreeding depression. I assume that mating success is constant across genotypes (this may not be possible if one allele approaches extinction).\nStep 2 - finding the frequency of all potential mating combinations in the mating population\nNext, we model the effect of inbreeding preference on inclusive fitness (direct + indirect fitness). I first assume that individuals are faced with a simultaneous choice situation - between mating with a relative or mating with an unrelated individual.\nFor simplicity at the outset, I assume that inbreeding preference is only expressed in females. To simulate inbreeding preference, females carrying the \\(a\\) allele mate with siblings (those individuals produced by the same parental genotype combination). However, dominance also plays a role here. A proportion \\(1 - h\\) of \\(Aa\\) females express inbreeding preference, whereas a proportion \\(h\\) do not.\nWith the above in mind, I calculate the expected frequencies of each possible ‘mating combination’ (i.e. the combination of the maternal and paternal genotypes) across the population. For singly-mated females with genotype \\(AA\\), the frequency of each mating type is simply given by \\(F_iM_j\\), where \\(F_i\\) and \\(M_j\\) are the female and male parental genotype frequencies, that is they choose mates at random. For females with genotype \\(Aa\\) a proportion \\(1 - h\\) express a preference for inbreeding. For these females, the expected frequencies for each mating type are determined by the parental mating type combination they were produced by. These females randomly choose a mate from a subset of possible genotypes produced by the parental combination e.g. an \\(AA\\) x \\(aa\\) mating will produce a female that will choose to mate with a \\(Aa\\) male (the only possible genotype of her brothers). The proportion \\(h\\) of \\(Aa\\) females not expressing the \\(a\\) allele choose mates at random. Finally, All \\(aa\\) females choose to mate with individuals sired by the same parental genotypes.\n\n\nCode\nfind_mating_type_frequencies &lt;- function(pop, prob_remating_SD, prob_remating_W){\n  \n  # Step 1\n  \n  pop$prop &lt;- pop$prop * pop$egg_adult_viability # here's the selection step \n  pop$prop &lt;- pop$prop / sum(pop$prop) # now restandardise so that the props sum to 1\n  \n  # Step 2\n  \n  # Calculate the frequency of each single-mating combination\n  \n  first_mating_types &lt;- \n    expand_grid(mother = pop$type[str_detect(pop$type, \"female\")], # find all possible mother genotypes\n                father = pop$type[!str_detect(pop$type, \"female\")]) %&gt;% # find all possible father1 genotypes\n    mutate(prop_matings = 0, remating_probability = 0) # make placeholder columns we will fill in below\n  \n  # find genotype frequencies calculated for each sex (mate choice means these will not necessarily be 50:50)\n  \n  female_frequencies &lt;- pop %&gt;% filter(str_detect(type, \"female\")) %&gt;% mutate(prop = prop / sum(prop))\n  male_frequencies &lt;- pop %&gt;% filter(!str_detect(type, \"female\")) %&gt;% mutate(prop = prop / sum(prop))\n  \n  # This next step multiplies the proportion[i] of females with genotype[i] with the proportion[i] of males with genotype[i] \n  \n  for(i in 1:nrow(first_mating_types)){\n    first_mating_types$prop_matings[i] &lt;- female_frequencies$prop[female_frequencies$type == first_mating_types$mother[i]] * \n      male_frequencies$prop[male_frequencies$type == first_mating_types$father1[i]]\n  }\n  \n  # Now we incorporate female remating probabilities (SDSD males assumed to have same effect on females as WW males)\n  \n  first_mating_types$remating_probability &lt;- ifelse(str_detect(first_mating_types$father1, \"WSD\"), prob_remating_SD, prob_remating_W)\n  \n  # Now lets calculate the frequency of each double-mating combination, with the end product being the mating_type_frequency of each mating possibility\n  \n  second_mating_types &lt;- expand_grid(first_mating_types, father2 = c(\"none\", unique(first_mating_types$father1))) %&gt;%\n    mutate(mating_type_freq = 0)\n  \n  # scale the proportion of matings calculated above by the likelihood that these females will mate once\n  \n  for(i in 1:nrow(second_mating_types)){\n    if(second_mating_types$father2[i] == \"none\"){\n      second_mating_types$mating_type_freq[i] &lt;- \n        second_mating_types$prop_matings[i] * # Frequency of females with this value of father1\n        (1 - second_mating_types$remating_probability[i])\n    }\n    \n    # now calculate the frequency of mating tryads for the females that mate twice\n    \n    if(second_mating_types$father2[i] != \"none\"){\n      second_mating_types$mating_type_freq[i] &lt;- \n        second_mating_types$prop_matings[i] * # Frequency of females with this value of father1\n        second_mating_types$remating_probability[i] *\n        male_frequencies$prop[male_frequencies$type == second_mating_types$father2[i]] # pop. freq of the 2nd male type\n    }\n  }\n  \n  second_mating_types %&gt;% # output\n    select(mother, father1, father2, mating_type_freq) %&gt;%\n    # clean up the output by remving redundant info (makes it easier later)\n    mutate(mother = str_remove_all(mother, \"_female\"),\n           father1 = str_remove_all(father1, \"_male\"),\n           father2 = str_remove_all(father2, \"_male\"))\n}"
  }
]